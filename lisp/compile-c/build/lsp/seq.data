static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)1252, (cl_index)1252,
        (ecl_base_char*)
"\"Not a valid index ~A into sequence ~A\" \"~S does not specify a sequence type\" \"C"
 "annot create a sequence of size ~S which matches type ~S.\" 0 0 0 0 0 0 0 0 0 0 0"
 " ((nil) (list . list) (string . character) ((vector nil)) ((vector base-char) . "
 "base-char) ((vector character) . character) ((vector bit) . bit) ((vector ext::b"
 "yte8) . ext::byte8) ((vector ext::integer8) . ext::integer8) ((vector ext::byte1"
 "6) . ext::byte16) ((vector ext::integer16) . ext::integer16) ((vector ext::byte3"
 "2) . ext::byte32) ((vector ext::integer32) . ext::integer32) ((vector ext::byte6"
 "4) . ext::byte64) ((vector ext::integer64) . ext::integer64) ((vector single-flo"
 "at) . single-float) ((vector double-float) . double-float) ((vector long-float) "
 ". long-float) ((vector si::complex-single-float) . si::complex-single-float) ((v"
 "ector si::complex-double-float) . si::complex-double-float) ((vector si::complex"
 "-long-float) . si::complex-long-float) ((vector t) . t)) \"Cannot find the elemen"
 "t type in vector type ~S\" si::closest-sequence-type si::make-seq-iterator si::se"
 "q-iterator-ref si::seq-iterator-set si::seq-iterator-next si::seq-iterator-list-"
 "pop si::coerce-to-list si::coerce-to-vector :initial-value si::every* 0 :initial"
 "-element 0 0 0 0 0 0 0 si::simple-array-p 0 \"SYSTEM\"" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
