static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)3063, (cl_index)3063,
        (ecl_base_char*)
"0 c::global 0 c::*current-function* c::fun c::make-var c::var-referenced-in-form"
 "-list c::var-changed-in-form-list c::var-referenced-in-form c::var-changed-in-fo"
 "rm \"Variable assigned a value incompatible with its type declaration.~%Variable:"
 " ~A~%Expected type: ~A~%Value type: ~A\" c::var c::c1form c::update-variable-type"
 " c::var-read-forms c::*debug-compiler* \"Number of references in VAR ~A unequal t"
 "o references list\" c::assert-var-ref-value \"Variable ~A, declared as IGNORE, fou"
 "nd in a lisp form.\" c::assert-var-not-ignored c::delete-from-read-nodes c::add-t"
 "o-read-nodes c::add-to-set-nodes c::add-to-set-nodes-of-var-list c::*global-vars"
 "* c::check-global c::*cmp-env-root* c::special-variable-p c::*cmp-env* c::local-"
 "variable-p c::symbol-macro-p c::cmp-type c::variable-type-in-env c::chk-symbol-m"
 "acrolet \"The variable ~s is not a symbol.\" \"The constant ~s is being bound.\" c::"
 "lexical \"Special variable ~A cannot be declared to have C type ~A\" :kind :loc :i"
 "gnorable :ref c::c1make-var \"The variable ~s is not used.\" c::check-vref :args c"
 "::c1var c::make-lcl-var c::temp c::make-temp-var :warn \"c1vref: ~s is not a vari"
 "able.\" c::closure 0 0 \"Variable ~A declared of C type cannot be referenced acros"
 "s function boundaries.\" c::c1vref c::push-vars c::unboxed 0 0 c::local c::global"
 "-var-p c::useful-var-p c::c2var/location \"ecl_symbol_value(\" \")\" \"ECL_SYM_VAL(cl"
 "_env_copy,\" c::wt-var c::var-rep-type \"set-var: ~s is not a vairable.\" \" = \" \"cl"
 "_set(\" \",\" \"ECL_SETQ(cl_env_copy,\" \");\" c::set-var \"lex\" \"[\" \"]\" c::wt-lex \"ECL_"
 "CONS_CAR(CLV\" c::wt-env c::*undefined-vars* c::c1make-global-variable si::regist"
 "er-global \"SETQ requires an even number of arguments.\" c::c1setq \"The constant ~"
 "s is being assigned a value.\" c::c1setq1 c::*destination* c::c2setq c::c1progv c"
 "::*lcl* \"cl_object \" \", \" \"; cl_index \" \";\" c::*unwind-exit* \" = ecl_progv(cl_en"
 "v_copy, \" c::c2progv \"No form was given for the value of ~s.\" (member nil) c::c1"
 "psetq c::*opened-c-braces* :rep-type \" \" c::*volatile* c::c2psetq 0 c::%make-var"
 " c::var-kind c::fun-local-vars 0 0 0 c::var-read-nodes c::find-form-in-node-list"
 " c::var-functions-reading 0 c::var-set-nodes c::c1form-sp-change c::var-function"
 "s-setting 0 c::var-type c::type-and c::var-name c::cmpwarn c::c1form-name c::c1f"
 "orm-args c::c1form-primary-type 0 0 c::var-ref c::baboon 0 c::var-ignorable c::c"
 "mpwarn-style 0 c::delete-form-from-node-list 0 c::add-form-to-node-list c::var-f"
 "unction c::fun-referenced-vars 0 0 0 0 c::cmp-env-search-var 0 c::var-p 0 0 0 0 "
 "c::cmperr c::machine-c-type-p c::rep-type->lisp-type 0 c::var-ref-clb c::lisp-ty"
 "pe->rep-type 0 c::make-c1form* 0 :rep-type :type c::next-lcl 0 c::next-temp 0 0 "
 "c::cmp-env-register-var 0 0 0 0 0 c::precise-loc-type c::unwind-exit 0 c::var-lo"
 "c c::safe-compile c::wt 0 0 c::wt-nl c::wt-coerce-loc 0 c::wt-lcl 0 0 :type :kin"
 "d :warn c::add-symbol c::undefined-variable 0 0 c::c1nil c::c1progn 0 c::trivial"
 "-type-p c::c1expr c::c1form-type 0 c::c2expr* 0 c::check-args-number 0 c::wt-nl-"
 "open-brace c::c2expr c::wt-nl-close-brace 0 0 c::rep-type->c-name c::wt-nl-close"
 "-many-braces \"COMPILER\"" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
