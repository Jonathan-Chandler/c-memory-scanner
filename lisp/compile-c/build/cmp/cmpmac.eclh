
#ifdef ECL_DYNAMIC_VV
static cl_object *VV;
#else
static cl_object VV[VM];
#endif

#ifdef __cplusplus
extern "C" {
#endif
static cl_object LC1defun_cached(cl_object , cl_object );
static cl_object LC2defun_equal_cached(cl_object , cl_object );
static cl_object L3env_var_name_empty_cache();
static cl_object L5env_var_name(cl_object );
static cl_object LC4env_var_name(cl_object );
static cl_object L6lex_env_var_name_empty_cache();
static cl_object L8lex_env_var_name(cl_object );
static cl_object LC7lex_env_var_name(cl_object );
static cl_object L9same_fname_p(cl_object , cl_object );
static cl_object LC10next_cmacro(cl_object , cl_object );
static cl_object L11next_label();
static cl_object L12next_label_();
static cl_object L13labelp(cl_object );
static cl_object L14maybe_next_label();
static cl_object L15maybe_wt_label(cl_object );
static cl_object LC16with_exit_label(cl_object , cl_object );
static cl_object LC17with_optional_exit_label(cl_object , cl_object );
static cl_object L18next_lcl(cl_narg, ...);
static cl_object L19next_cfun(cl_narg, ...);
static cl_object L20next_temp();
static cl_object L21next_lex();
static cl_object L22next_env();
static cl_object LC23reckless(cl_object , cl_object );
static cl_object Cblock;
#define VM 84
#define VMtemp 1
#define ECL_DEFINE_SETF_FUNCTIONS 
#ifdef __cplusplus
}
#endif
/*
 * Exported Lisp functions
 */
#define compiler_cfuns_size 21
static const struct ecl_cfunfixed compiler_cfuns[] = {
 /*t,m,narg,padding,name=function-location,block=name-location,entry,entry_fixed,file,file_position*/
{0,0,2,0,ecl_make_fixnum(60),ecl_make_fixnum(14),(cl_objectfn)LC1defun_cached,NULL,ECL_NIL,ecl_make_fixnum(403)},
{0,0,2,0,ecl_make_fixnum(62),ecl_make_fixnum(15),(cl_objectfn)LC2defun_equal_cached,NULL,ECL_NIL,ecl_make_fixnum(1876)},
{0,0,0,0,ecl_make_fixnum(63),ecl_make_fixnum(17),(cl_objectfn)L3env_var_name_empty_cache,NULL,ECL_NIL,ecl_make_fixnum(2103)},
{0,0,1,0,ecl_make_fixnum(64),ecl_make_fixnum(20),(cl_objectfn)L5env_var_name,NULL,ECL_NIL,ecl_make_fixnum(2103)},
{0,0,0,0,ecl_make_fixnum(65),ecl_make_fixnum(22),(cl_objectfn)L6lex_env_var_name_empty_cache,NULL,ECL_NIL,ecl_make_fixnum(2164)},
{0,0,1,0,ecl_make_fixnum(66),ecl_make_fixnum(24),(cl_objectfn)L8lex_env_var_name,NULL,ECL_NIL,ecl_make_fixnum(2164)},
{0,0,2,0,ecl_make_fixnum(67),ecl_make_fixnum(25),(cl_objectfn)L9same_fname_p,NULL,ECL_NIL,ecl_make_fixnum(2230)},
{0,0,2,0,ecl_make_fixnum(68),ecl_make_fixnum(27),(cl_objectfn)LC10next_cmacro,NULL,ECL_NIL,ecl_make_fixnum(2308)},
{0,0,0,0,ecl_make_fixnum(70),ecl_make_fixnum(29),(cl_objectfn)L11next_label,NULL,ECL_NIL,ecl_make_fixnum(2379)},
{0,0,0,0,ecl_make_fixnum(71),ecl_make_fixnum(30),(cl_objectfn)L12next_label_,NULL,ECL_NIL,ecl_make_fixnum(2433)},
{0,0,1,0,ecl_make_fixnum(72),ecl_make_fixnum(31),(cl_objectfn)L13labelp,NULL,ECL_NIL,ecl_make_fixnum(2488)},
{0,0,0,0,ecl_make_fixnum(73),ecl_make_fixnum(33),(cl_objectfn)L14maybe_next_label,NULL,ECL_NIL,ecl_make_fixnum(2554)},
{0,0,1,0,ecl_make_fixnum(74),ecl_make_fixnum(34),(cl_objectfn)L15maybe_wt_label,NULL,ECL_NIL,ecl_make_fixnum(2638)},
{0,0,2,0,ecl_make_fixnum(75),ecl_make_fixnum(38),(cl_objectfn)LC16with_exit_label,NULL,ECL_NIL,ecl_make_fixnum(2720)},
{0,0,2,0,ecl_make_fixnum(76),ecl_make_fixnum(40),(cl_objectfn)LC17with_optional_exit_label,NULL,ECL_NIL,ecl_make_fixnum(2892)},
{0,0,-1,0,ecl_make_fixnum(77),ecl_make_fixnum(44),(cl_objectfn)L18next_lcl,NULL,ECL_NIL,ecl_make_fixnum(3087)},
{0,0,-1,0,ecl_make_fixnum(79),ecl_make_fixnum(47),(cl_objectfn)L19next_cfun,NULL,ECL_NIL,ecl_make_fixnum(3246)},
{0,0,0,0,ecl_make_fixnum(80),ecl_make_fixnum(50),(cl_objectfn)L20next_temp,NULL,ECL_NIL,ecl_make_fixnum(3402)},
{0,0,0,0,ecl_make_fixnum(81),ecl_make_fixnum(54),(cl_objectfn)L21next_lex,NULL,ECL_NIL,ecl_make_fixnum(3515)},
{0,0,0,0,ecl_make_fixnum(82),ecl_make_fixnum(57),(cl_objectfn)L22next_env,NULL,ECL_NIL,ecl_make_fixnum(3637)},
{0,0,2,0,ecl_make_fixnum(83),ecl_make_fixnum(59),(cl_objectfn)LC23reckless,NULL,ECL_NIL,ecl_make_fixnum(3766)},
};
