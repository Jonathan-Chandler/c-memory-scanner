static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)1551, (cl_index)1551,
        (ecl_base_char*)
"si::slot-access-function (si::x) ((si::old (gensym)) (si::new (gensym))) si::old"
 " si::new 'mp::compare-and-swap-structure si::x 'quote (si::old si::new) 'si::str"
 "ucture-ref si::make-atomic-accessors \"Slot ~A in structure ~A only admits values"
 " of type ~A.\" si::structure-type-error (or list vector) \"~S is an illegal struct"
 "ure type.\" si::structure-access si::typed-structure-name si::.structure-construc"
 "tor-class. (vector t) \"~S is an illegal structure type\" \"The structure should be"
 " named.\" \"~S is an illegal structure slot option.\" :read-only \"Tried to turn a r"
 "ead only slot ~A into writeable.\" :unknown \"Attempt to redefine the structure ~S"
 " incompatibly with the current definition.\" (si::obj stream) si::defstruct-form "
 "si::is-a-structure si::structure-include si::structure-type si::structure-named "
 "si::structure-offset si::structure-constructors si::*keep-documentation* si::def"
 "ine-structure \"-\" \"MAKE-\" \"COPY-\" \"-P\" \"~S is an illegal included structure.\" :a"
 "tomic-accessors \"~S is an illegal defstruct option.\" (:copier :predicate :print-"
 "function :print-object :atomic-accessors) \"~S is an illegal structure include.\" "
 "(vector symbol) \"Structure cannot have type ~S and be :NAMED.\" \"Contradictory co"
 "nstructor options.\" \"~S is an illegal structure predicate.\" \"A print function is"
 " supplied to a typed structure.\" (:compile-toplevel :load-toplevel) (:execute) ("
 ":compile-toplevel :load-toplevel :execute) defstruct 0 0 0 si::set-documentation"
 " si::closest-sequence-type si::dm-too-few-arguments si::dm-too-many-arguments 0 "
 "clos::install-method 0 \"SYSTEM\"" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
