
#ifdef ECL_DYNAMIC_VV
static cl_object *VV;
#else
static cl_object VV[VM];
#endif

#ifdef __cplusplus
extern "C" {
#endif
static cl_object L1bug_or_error(cl_object , cl_object );
static cl_object LC2stream_advance_to_column(cl_object , cl_object );
static cl_object LC3stream_clear_input(cl_object );
static cl_object LC4stream_clear_input(cl_object );
static cl_object LC5stream_clear_input(cl_object );
static cl_object LC6stream_clear_output(cl_object );
static cl_object LC7stream_clear_output(cl_object );
static cl_object LC8stream_clear_output(cl_object );
static cl_object LC9close(cl_narg, cl_object , ...);
#define LC9closekeys (&VV[18])
static cl_object LC10close(cl_narg, cl_object , ...);
#define LC10closekeys (&VV[18])
static cl_object LC11close(cl_narg, cl_object , ...);
#define LC11closekeys (&VV[18])
static cl_object LC12stream_element_type(cl_object );
static cl_object LC13stream_element_type(cl_object );
static cl_object LC14stream_element_type(cl_object );
static cl_object LC15stream_finish_output(cl_object );
static cl_object LC16stream_finish_output(cl_object );
static cl_object LC17stream_finish_output(cl_object );
static cl_object LC18stream_force_output(cl_object );
static cl_object LC19stream_force_output(cl_object );
static cl_object LC20stream_force_output(cl_object );
static cl_object LC21stream_fresh_line(cl_object );
static cl_object LC22stream_fresh_line(cl_object );
static cl_object LC23input_stream_p(cl_object );
static cl_object LC24input_stream_p(cl_object );
static cl_object LC25input_stream_p(cl_object );
static cl_object LC26input_stream_p(cl_object );
static cl_object LC27stream_interactive_p(cl_object );
static cl_object LC28stream_interactive_p(cl_object );
static cl_object LC29stream_line_column(cl_object );
static cl_object LC30stream_listen(cl_object );
static cl_object LC31stream_listen(cl_object );
static cl_object LC32stream_listen(cl_object );
static cl_object LC33open_stream_p(cl_object );
static cl_object LC34open_stream_p(cl_object );
static cl_object LC35output_stream_p(cl_object );
static cl_object LC36output_stream_p(cl_object );
static cl_object LC37output_stream_p(cl_object );
static cl_object LC38output_stream_p(cl_object );
static cl_object LC39stream_peek_char(cl_object );
static cl_object LC40stream_peek_char(cl_object );
static cl_object LC41stream_peek_char(cl_object );
static cl_object LC42stream_read_byte(cl_object );
static cl_object LC43stream_read_byte(cl_object );
static cl_object LC44stream_read_char(cl_object );
static cl_object LC45stream_read_char(cl_object );
static cl_object LC46stream_unread_char(cl_object , cl_object );
static cl_object LC47stream_unread_char(cl_object , cl_object );
static cl_object LC48stream_read_char_no_hang(cl_object );
static cl_object LC49stream_read_char_no_hang(cl_object );
static cl_object LC50stream_read_char_no_hang(cl_object );
static cl_object LC51stream_read_line(cl_object );
static cl_object LC52stream_read_line(cl_object );
static cl_object LC53stream_read_line(cl_object );
static cl_object L54clos_default_read_sequence(cl_object , cl_object , cl_object , cl_object );
static cl_object LC55stream_read_sequence(cl_narg, cl_object , cl_object , ...);
static cl_object LC56stream_read_sequence(cl_narg, cl_object , cl_object , ...);
static cl_object LC57stream_read_sequence(cl_narg, cl_object , cl_object , ...);
static cl_object LC58stream_read_sequence(cl_narg, cl_object , cl_object , ...);
static cl_object LC59stream_start_line_p(cl_object );
static cl_object LC60stream_file_position(cl_narg, cl_object , ...);
static cl_object LC61stream_file_position(cl_narg, cl_object , ...);
static cl_object LC62streamp(cl_object );
static cl_object LC63streamp(cl_object );
static cl_object LC64stream_write_byte(cl_object , cl_object );
static cl_object LC65stream_write_byte(cl_object , cl_object );
static cl_object LC66stream_write_char(cl_object , cl_object );
static cl_object LC67stream_write_char(cl_object , cl_object );
static cl_object L68clos_default_write_sequence(cl_object , cl_object , cl_object , cl_object );
static cl_object LC69stream_write_sequence(cl_narg, cl_object , cl_object , ...);
static cl_object LC70stream_write_sequence(cl_narg, cl_object , cl_object , ...);
static cl_object LC71stream_write_sequence(cl_narg, cl_object , cl_object , ...);
static cl_object LC72stream_write_sequence(cl_narg, cl_object , cl_object , ...);
static cl_object LC73stream_write_string(cl_narg, cl_object , cl_object , ...);
static cl_object LC74stream_write_string(cl_narg, cl_object , cl_object , ...);
static cl_object LC75stream_write_string(cl_narg, cl_object , cl_object , ...);
static cl_object LC76stream_terpri(cl_object );
static cl_object LC77stream_terpri(cl_object );
static cl_object LC78stream_terpri(cl_object );
static cl_object LC79stream_file_descriptor(cl_narg, cl_object , ...);
static cl_object LC80stream_file_descriptor(cl_narg, cl_object , ...);
static cl_object LC81stream_file_descriptor(cl_narg, cl_object , ...);
static cl_object LC82stream_file_descriptor(cl_narg, cl_object , ...);
static cl_object L83_redefine_cl_functions(cl_object , cl_object , cl_object );
static cl_object L84redefine_cl_functions();
static cl_object Cblock;
#define VM 26
#define VMtemp 71
#define ECL_DEFINE_SETF_FUNCTIONS \
VV[24]=ecl_setf_definition(ECL_SYM("SLOT-VALUE",973),ECL_T);
#ifdef __cplusplus
}
#endif
/*
 * Exported Lisp functions
 */
#define compiler_cfuns_size 4
static const struct ecl_cfunfixed compiler_cfuns[] = {
 /*t,m,narg,padding,name=function-location,block=name-location,entry,entry_fixed,file,file_position*/
{0,0,4,0,ecl_make_fixnum(20),ecl_make_fixnum(4),(cl_objectfn)L54clos_default_read_sequence,NULL,ECL_NIL,ecl_make_fixnum(17476)},
{0,0,4,0,ecl_make_fixnum(21),ecl_make_fixnum(5),(cl_objectfn)L68clos_default_write_sequence,NULL,ECL_NIL,ecl_make_fixnum(20337)},
{0,0,3,0,ecl_make_fixnum(23),ecl_make_fixnum(12),(cl_objectfn)L83_redefine_cl_functions,NULL,ECL_NIL,ecl_make_fixnum(25828)},
{0,0,0,0,ecl_make_fixnum(25),ecl_make_fixnum(16),(cl_objectfn)L84redefine_cl_functions,NULL,ECL_NIL,ecl_make_fixnum(26950)},
};
