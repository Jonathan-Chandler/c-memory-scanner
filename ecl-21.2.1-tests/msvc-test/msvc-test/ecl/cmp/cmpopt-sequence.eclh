
#ifdef ECL_DYNAMIC_VV
static cl_object *VV;
#else
static cl_object VV[VM];
#endif

#ifdef __cplusplus
extern "C" {
#endif
static cl_object L1constant_function_expression(cl_object );
static cl_object L5seq_opt_test_function(cl_object , cl_object );
static cl_object LC2__lambda1(cl_narg, cl_object , cl_object , ...);
static cl_object LC3__lambda2(cl_narg, cl_object , cl_object , ...);
static cl_object LC4__lambda3(cl_narg, cl_object , cl_object , ...);
static cl_object L8seq_opt_key_function(cl_object );
static cl_object LC6__lambda4(cl_narg, cl_object , ...);
static cl_object LC7__lambda5(cl_narg, cl_object , ...);
static cl_object L9seq_opt_parse_args(cl_narg, cl_object , cl_object , ...);
#define L9seq_opt_parse_argskeys (&VV[23])
static cl_object LC10do_in_seq(cl_object , cl_object );
static cl_object LC11do_in_list(cl_object , cl_object );
static cl_object L12expand_member(cl_narg, cl_object , cl_object , ...);
static cl_object LC13__lambda68(cl_object , cl_object );
static cl_object L14expand_assoc(cl_narg, cl_object , cl_object , ...);
static cl_object LC15__lambda78(cl_object , cl_object );
static cl_object L16expand_find(cl_narg, cl_object , cl_object , ...);
static cl_object LC17__lambda84(cl_object , cl_object );
static cl_object Cblock;
#define VM 64
#define VMtemp 1
#define ECL_DEFINE_SETF_FUNCTIONS 
#ifdef __cplusplus
}
#endif
/*
 * Statically defined constants
 */
ecl_def_ct_base_string(_ecl_static_10,"%CAR",4,static,const);
ecl_def_ct_base_string(_ecl_static_9,"%ELT",4,static,const);
ecl_def_ct_base_string(_ecl_static_8,"%SUBLIST",8,static,const);
ecl_def_ct_base_string(_ecl_static_7,"%LIST",5,static,const);
ecl_def_ct_base_string(_ecl_static_6,"%VALUE",6,static,const);
ecl_def_ct_base_string(_ecl_static_5,"%SEQUENCE",9,static,const);
ecl_def_ct_base_string(_ecl_static_4,"%COUNTER",8,static,const);
ecl_def_ct_base_string(_ecl_static_3,"%ITERATOR",9,static,const);
ecl_def_ct_base_string(_ecl_static_2,"%START",6,static,const);
ecl_def_ct_base_string(_ecl_static_1,"KEY-FUNCTION",12,static,const);
ecl_def_ct_base_string(_ecl_static_0,"TEST-FUNCTION",13,static,const);
/*
 * Exported Lisp functions
 */
#define compiler_cfuns_size 9
static const struct ecl_cfunfixed compiler_cfuns[] = {
 /*t,m,narg,padding,name=function-location,block=name-location,entry,entry_fixed,file,file_position*/
{0,0,1,0,ecl_make_fixnum(48),ecl_make_fixnum(3),(cl_objectfn)L1constant_function_expression,NULL,ECL_NIL,ecl_make_fixnum(625)},
{0,0,2,0,ecl_make_fixnum(49),ecl_make_fixnum(5),(cl_objectfn)L5seq_opt_test_function,NULL,ECL_NIL,ecl_make_fixnum(745)},
{0,0,1,0,ecl_make_fixnum(50),ecl_make_fixnum(7),(cl_objectfn)L8seq_opt_key_function,NULL,ECL_NIL,ecl_make_fixnum(1421)},
{0,0,-3,0,ecl_make_fixnum(51),ecl_make_fixnum(12),(cl_objectfn)L9seq_opt_parse_args,NULL,ECL_NIL,ecl_make_fixnum(1860)},
{0,0,2,0,ecl_make_fixnum(53),ecl_make_fixnum(18),(cl_objectfn)LC10do_in_seq,NULL,ECL_NIL,ecl_make_fixnum(5357)},
{0,0,2,0,ecl_make_fixnum(57),ecl_make_fixnum(22),(cl_objectfn)LC11do_in_list,NULL,ECL_NIL,ecl_make_fixnum(6360)},
{0,0,-3,0,ecl_make_fixnum(58),ecl_make_fixnum(37),(cl_objectfn)L12expand_member,NULL,ECL_NIL,ecl_make_fixnum(6633)},
{0,0,-3,0,ecl_make_fixnum(62),ecl_make_fixnum(46),(cl_objectfn)L14expand_assoc,NULL,ECL_NIL,ecl_make_fixnum(8984)},
{0,0,-3,0,ecl_make_fixnum(63),ecl_make_fixnum(47),(cl_objectfn)L16expand_find,NULL,ECL_NIL,ecl_make_fixnum(10988)},
};
