static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)625, (cl_index)625,
        (ecl_base_char*)
"0 0 \"Found~%~A~%as expression for a stream, but it cannot be externalized.\" \"Fou"
 "nd~%~A~%where a stream was expected.\" ((:object) :object \"_ecl_stream_or_default"
 "_output(#0)\" :one-liner t) ((:wchar :object) :wchar \"ecl_princ_char(#0,#1)\" :one"
 "-liner t) (:object) \"ecl_princ_str(\" \",#0)\" (:one-liner t) ((:object :object) :o"
 "bject \"ecl_princ(#0,#1)\" :one-liner t) ((:object) :object \"ecl_terpri(#0)\" :one-"
 "liner t) ((:object :object) :object \"ecl_print(#0,#1)\" :one-liner t) ((:object :"
 "object) :object \"ecl_prin1(#0,#1)\" :one-liner t) c::cmpwarn si::dm-too-few-argum"
 "ents si::dm-too-many-arguments c::c-inline-safe-string \"COMPILER\"" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
