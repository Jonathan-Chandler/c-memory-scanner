static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)719, (cl_index)719,
        (ecl_base_char*)
"c::with-let*-type-check #1=#:%size #2=#:%pos (lognot (ash -1 #1#)) (- #2#) #3=#:"
 "%size #4=#:%pos (ash (lognot (ash -1 #3#)) #4#) #5=#:%size #6=#:%pos (#7=#:%mask"
 " (ash (lognot (ash -1 #5#)) #6#) t) #7# #8=#:%size #9=#:%pos (#10=#:%mask (ash ("
 "lognot (ash -1 #8#)) #9#) t) #10# c::shift c::*cinline-dispatch-table* (:object "
 ":fixnum) (:object) \"ecl_ash(#0,#1)\" \"((#0) >> (~D))\" \"((#0) << (~D))\" c::*p0-dis"
 "patch-table* ((unsigned-byte 8) fixnum) c::policy-inline-bit-operations si::dm-t"
 "oo-few-arguments si::dm-too-many-arguments c::policy-assume-right-type c::inline"
 "d-arg-type c::lisp-type->rep-type c::inlined-arg-loc c::loc-immediate-value c::c"
 "-integer-rep-type-p c::produce-inline-loc c::c-integer-rep-type-bits \"COMPILER\"" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
