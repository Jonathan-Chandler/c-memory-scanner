static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)1582, (cl_index)1582,
        (ecl_base_char*)
"ext::external-process-%lock ext::with-process-lock ext::copy-external-process ex"
 "t::external-process-p 0 ext::make-external-process ext::external-process-%pipe m"
 "p::cas-expander ext::external-process-%code ext::external-process-%status 0 0 0 "
 "ext::external-process-status 0 0 0 0 0 (:error :abort :signaled :exited :running"
 " :resumed :stopped nil) ext::external-process-wait ext::finalize-external-proces"
 "s :virtual-stream \"Invalid ~S argument to EXT:RUN-PROGRAM\" (#\\  #\\Tab #\\\") \"nul\""
 " \"\\\\\\\"\" ext::escape-arg ext::pipe-streams 0 si::dm-too-few-arguments si::dm-too-"
 "many-arguments si::define-structure 0 0 0 0 :input :output :error :wait :environ"
 " :if-input-does-not-exist :if-output-exists :if-error-exists :external-format :e"
 "scape-arguments si::make-seq-iterator si::seq-iterator-ref si::seq-iterator-next"
 " 0 0 \"EXT\" (ext::pid ext::input ext::output ext::error-stream (ext::%status :run"
 "ning) (ext::%code nil) (ext::%lock #1=(mp::make-lock)) (ext::%pipe #2=(mp::make-"
 "process))) ((ext::pid nil t nil 0 nil) (ext::input nil t nil 1 nil) (ext::output"
 " nil t nil 2 nil) (ext::error-stream nil t nil 3 nil) (ext::%status :running t n"
 "il 4 nil) (ext::%code nil t nil 5 nil) (ext::%lock #1# t nil 6 nil) (ext::%pipe "
 "#2# t nil 7 nil)) ((ext::make-external-process nil)) \"Ignore lock and proceed.\" "
 "\"Attempt to define CAS accessor ~S in locked package.\" (ext::external-process-%p"
 "ipe) (ext::external-process-%lock) (ext::external-process-%code) (ext::external-"
 "process-%status) (ext::external-process-error-stream) (ext::external-process-out"
 "put) (ext::external-process-input) (ext::external-process-pid)" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
