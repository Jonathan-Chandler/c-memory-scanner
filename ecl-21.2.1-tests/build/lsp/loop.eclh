
#ifdef ECL_DYNAMIC_VV
static cl_object *VV;
#else
static cl_object VV[VM];
#endif

#ifdef __cplusplus
extern "C" {
#endif
static cl_object LC1loop_unsafe(cl_object , cl_object );
static cl_object LC2with_loop_list_collection_head(cl_object , cl_object );
static cl_object LC4loop_collect_rplacd(cl_object , cl_object );
static cl_object LC3cdr_wrap(cl_object , cl_object );
static cl_object LC5loop_collect_answer(cl_object , cl_object );
static cl_object L6make_loop_minimax_internal(cl_narg, ...);
#define L6make_loop_minimax_internalkeys (&VV[278])
static cl_object L7make_loop_minimax(cl_object , cl_object );
static cl_object L8loop_note_minimax_operation(cl_object , cl_object );
static cl_object LC9with_minimax_value(cl_object , cl_object );
static cl_object LC10loop_accumulate_minimax_value(cl_object , cl_object );
static cl_object L11loop_tequal(cl_object , cl_object );
static cl_object L12loop_tassoc(cl_object , cl_object );
static cl_object L13loop_tmember(cl_object , cl_object );
static cl_object L14loop_lookup_keyword(cl_object , cl_object );
static cl_object LC15loop_store_table_data(cl_object , cl_object );
static cl_object L16make_loop_universe(cl_narg, ...);
#define L16make_loop_universekeys (&VV[294])
static cl_object L18make_standard_loop_universe(cl_narg, ...);
#define L18make_standard_loop_universekeys (&VV[302])
static cl_object LC17maketable(cl_object );
static cl_object L19loop_make_psetq(cl_object );
static cl_object L20loop_make_desetq(cl_object );
static cl_object LC24loop_really_desetq(cl_object , cl_object );
static cl_object LC23loop_desetq_internal(cl_narg, cl_object , cl_object , ...);
static cl_object LC21find_non_null(cl_object );
static cl_object LC22__lambda179(cl_narg, cl_object , ...);
static cl_object L25loop_constant_fold_if_possible(cl_narg, cl_object , ...);
static cl_object LC26loop_body(cl_object , cl_object );
static cl_object L27loop_context();
static cl_object L28loop_error(cl_narg, cl_object , ...);
static cl_object L29loop_warn(cl_narg, cl_object , ...);
static cl_object L30loop_check_data_type(cl_narg, cl_object , cl_object , ...);
static cl_object LC31loop_finish(cl_object , cl_object );
static cl_object L32subst_gensyms_for_nil(cl_object );
static cl_object L33loop_build_destructuring_bindings(cl_object , cl_object );
static cl_object L34loop_translate(cl_object , cl_object , cl_object );
static cl_object L35loop_iteration_driver();
static cl_object L36loop_pop_source();
static cl_object L37loop_get_compound_form();
static cl_object L38loop_get_progn();
static cl_object L39loop_get_form();
static cl_object L40loop_construct_return(cl_object );
static cl_object L41loop_pseudo_body(cl_object );
static cl_object L42loop_emit_body(cl_object );
static cl_object L43loop_emit_final_value(cl_narg, ...);
static cl_object L44loop_disallow_conditional(cl_narg, ...);
static cl_object L45loop_disallow_anonymous_collectors();
static cl_object L46loop_disallow_aggregate_booleans();
static cl_object L47loop_typed_init(cl_object );
static cl_object L50loop_optional_type(cl_narg, ...);
static cl_object LC49replicate(cl_object , cl_object );
static cl_object LC48translate(volatile cl_object  *, cl_object , cl_object );
static cl_object L51loop_bind_block();
static cl_object L52loop_variable_p(cl_object );
static cl_object L53loop_make_variable(cl_narg, cl_object , cl_object , cl_object , ...);
static cl_object L54loop_make_iteration_variable(cl_object , cl_object , cl_object );
static cl_object L55loop_declare_variable(cl_narg, cl_object , cl_object , ...);
static cl_object L56loop_maybe_bind_form(cl_object , cl_object );
static cl_object L58loop_do_if(cl_object , cl_object );
static cl_object LC57get_clause(volatile cl_object  *, cl_object );
static cl_object L59loop_do_initially();
static cl_object L60loop_do_finally();
static cl_object L61loop_do_do();
static cl_object L62loop_do_named();
static cl_object L63loop_do_return();
static cl_object L64make_loop_collector(cl_narg, ...);
#define L64make_loop_collectorkeys (&VV[331])
static cl_object L65loop_get_collection_info(cl_object , cl_object , cl_object );
static cl_object L66loop_list_collection(cl_object );
static cl_object L67loop_sum_collection(cl_object , cl_object , cl_object );
static cl_object L68loop_maxmin_collection(cl_object );
static cl_object L69loop_do_always(cl_object , cl_object );
static cl_object L70loop_do_thereis(cl_object );
static cl_object L71loop_do_while(cl_object , cl_object );
static cl_object L72loop_do_with();
static cl_object L74loop_hack_iteration(cl_object );
static cl_object LC73make_endtest(cl_object );
static cl_object L75loop_do_for();
static cl_object L76loop_do_repeat();
static cl_object L77loop_when_it_variable();
static cl_object L78loop_ansi_for_equals(cl_object , cl_object , cl_object );
static cl_object L79loop_for_across(cl_object , cl_object , cl_object );
static cl_object L80loop_list_step(cl_object );
static cl_object L81loop_for_on(cl_object , cl_object , cl_object );
static cl_object L82loop_for_in(cl_object , cl_object , cl_object );
static cl_object L83make_loop_path(cl_narg, ...);
#define L83make_loop_pathkeys (&VV[359])
static cl_object L85add_loop_path(cl_narg, cl_object , cl_object , cl_object , ...);
#define L85add_loop_pathkeys (&VV[364])
static cl_object LC84__lambda411(cl_object );
static cl_object L86loop_for_being(cl_object , cl_object , cl_object );
static cl_object L87loop_named_var(cl_object );
static cl_object L90loop_collect_prepositional_phrases(cl_narg, cl_object , ...);
static cl_object LC88in_group_p(cl_object , cl_object );
static cl_object LC89__lambda444(cl_narg, cl_object , ...);
static cl_object L91loop_sequencer(cl_object , cl_object , cl_object , cl_object , cl_object , cl_object , cl_object , cl_object , cl_object , cl_object );
static cl_object L92loop_for_arithmetic(cl_object , cl_object , cl_object , cl_object );
static cl_object L93loop_hash_table_iteration_path(cl_narg, cl_object , cl_object , cl_object , ...);
#define L93loop_hash_table_iteration_pathkeys (&VV[375])
static cl_object L94loop_package_symbols_iteration_path(cl_narg, cl_object , cl_object , cl_object , ...);
#define L94loop_package_symbols_iteration_pathkeys (&VV[377])
static cl_object L95make_ansi_loop_universe(cl_object );
static cl_object L96loop_standard_expansion(cl_object , cl_object , cl_object );
static cl_object LC97loop(cl_object , cl_object );
static cl_object Cblock;
#define VM 379
#define VMtemp 16
#define ECL_DEFINE_SETF_FUNCTIONS 
#ifdef __cplusplus
}
#endif
/*
 * Statically defined constants
 */
ecl_def_ct_base_string(_ecl_static_3,"LOOP-PATH-",10,static,const);
ecl_def_ct_base_string(_ecl_static_2,"LOOP-COLLECTOR-",15,static,const);
ecl_def_ct_base_string(_ecl_static_1,"LOOP-UNIVERSE-",14,static,const);
ecl_def_ct_base_string(_ecl_static_0,"LOOP-MINIMAX-",13,static,const);
/*
 * Exported Lisp functions
 */
#define compiler_cfuns_size 43
static const struct ecl_cfunfixed compiler_cfuns[] = {
 /*t,m,narg,padding,name=function-location,block=name-location,entry,entry_fixed,file,file_position*/
{0,0,2,0,ecl_make_fixnum(270),ecl_make_fixnum(1),(cl_objectfn)LC1loop_unsafe,NULL,ECL_NIL,ecl_make_fixnum(3416)},
{0,0,2,0,ecl_make_fixnum(271),ecl_make_fixnum(3),(cl_objectfn)LC2with_loop_list_collection_head,NULL,ECL_NIL,ecl_make_fixnum(3535)},
{0,0,2,0,ecl_make_fixnum(274),ecl_make_fixnum(9),(cl_objectfn)LC4loop_collect_rplacd,NULL,ECL_NIL,ecl_make_fixnum(3820)},
{0,0,2,0,ecl_make_fixnum(275),ecl_make_fixnum(10),(cl_objectfn)LC5loop_collect_answer,NULL,ECL_NIL,ecl_make_fixnum(6006)},
{0,0,-1,0,ecl_make_fixnum(277),ecl_make_fixnum(14),(cl_objectfn)L6make_loop_minimax_internal,NULL,ECL_NIL,ecl_make_fixnum(6801)},
{0,0,2,0,ecl_make_fixnum(286),ecl_make_fixnum(23),(cl_objectfn)LC9with_minimax_value,NULL,ECL_NIL,ecl_make_fixnum(9034)},
{0,0,2,0,ecl_make_fixnum(291),ecl_make_fixnum(25),(cl_objectfn)LC10loop_accumulate_minimax_value,NULL,ECL_NIL,ecl_make_fixnum(9810)},
{0,0,2,0,ecl_make_fixnum(292),ecl_make_fixnum(26),(cl_objectfn)LC15loop_store_table_data,NULL,ECL_NIL,ecl_make_fixnum(11543)},
{0,0,-1,0,ecl_make_fixnum(293),ecl_make_fixnum(30),(cl_objectfn)L16make_loop_universe,NULL,ECL_NIL,ecl_make_fixnum(11655)},
{0,0,2,0,ecl_make_fixnum(309),ecl_make_fixnum(41),(cl_objectfn)LC24loop_really_desetq,NULL,ECL_NIL,ecl_make_fixnum(14996)},
{0,0,2,0,ecl_make_fixnum(310),ecl_make_fixnum(75),(cl_objectfn)LC26loop_body,NULL,ECL_NIL,ecl_make_fixnum(23051)},
{0,0,2,0,ecl_make_fixnum(311),ecl_make_fixnum(81),(cl_objectfn)LC31loop_finish,NULL,ECL_NIL,ecl_make_fixnum(25420)},
{0,0,1,0,ecl_make_fixnum(312),ecl_make_fixnum(83),(cl_objectfn)L32subst_gensyms_for_nil,NULL,ECL_NIL,ecl_make_fixnum(25730)},
{0,0,2,0,ecl_make_fixnum(313),ecl_make_fixnum(84),(cl_objectfn)L33loop_build_destructuring_bindings,NULL,ECL_NIL,ecl_make_fixnum(26306)},
{0,0,0,0,ecl_make_fixnum(316),ecl_make_fixnum(96),(cl_objectfn)L45loop_disallow_anonymous_collectors,NULL,ECL_NIL,ecl_make_fixnum(32176)},
{0,0,0,0,ecl_make_fixnum(317),ecl_make_fixnum(99),(cl_objectfn)L46loop_disallow_aggregate_booleans,NULL,ECL_NIL,ecl_make_fixnum(32371)},
{0,0,1,0,ecl_make_fixnum(320),ecl_make_fixnum(106),(cl_objectfn)L52loop_variable_p,NULL,ECL_NIL,ecl_make_fixnum(36528)},
{0,0,2,0,ecl_make_fixnum(324),ecl_make_fixnum(119),(cl_objectfn)L58loop_do_if,NULL,ECL_NIL,ecl_make_fixnum(40930)},
{0,0,0,0,ecl_make_fixnum(325),ecl_make_fixnum(121),(cl_objectfn)L59loop_do_initially,NULL,ECL_NIL,ecl_make_fixnum(43163)},
{0,0,0,0,ecl_make_fixnum(326),ecl_make_fixnum(123),(cl_objectfn)L60loop_do_finally,NULL,ECL_NIL,ecl_make_fixnum(43277)},
{0,0,0,0,ecl_make_fixnum(327),ecl_make_fixnum(124),(cl_objectfn)L61loop_do_do,NULL,ECL_NIL,ecl_make_fixnum(43386)},
{0,0,0,0,ecl_make_fixnum(328),ecl_make_fixnum(128),(cl_objectfn)L62loop_do_named,NULL,ECL_NIL,ecl_make_fixnum(43445)},
{0,0,0,0,ecl_make_fixnum(329),ecl_make_fixnum(129),(cl_objectfn)L63loop_do_return,NULL,ECL_NIL,ecl_make_fixnum(43953)},
{0,0,-1,0,ecl_make_fixnum(330),ecl_make_fixnum(132),(cl_objectfn)L64make_loop_collector,NULL,ECL_NIL,ecl_make_fixnum(44073)},
{0,0,1,0,ecl_make_fixnum(341),ecl_make_fixnum(144),(cl_objectfn)L66loop_list_collection,NULL,ECL_NIL,ecl_make_fixnum(46275)},
{0,0,3,0,ecl_make_fixnum(343),ecl_make_fixnum(147),(cl_objectfn)L67loop_sum_collection,NULL,ECL_NIL,ecl_make_fixnum(47347)},
{0,0,1,0,ecl_make_fixnum(344),ecl_make_fixnum(150),(cl_objectfn)L68loop_maxmin_collection,NULL,ECL_NIL,ecl_make_fixnum(48354)},
{0,0,2,0,ecl_make_fixnum(346),ecl_make_fixnum(151),(cl_objectfn)L69loop_do_always,NULL,ECL_NIL,ecl_make_fixnum(49298)},
{0,0,1,0,ecl_make_fixnum(347),ecl_make_fixnum(152),(cl_objectfn)L70loop_do_thereis,NULL,ECL_NIL,ecl_make_fixnum(49692)},
{0,0,2,0,ecl_make_fixnum(348),ecl_make_fixnum(153),(cl_objectfn)L71loop_do_while,NULL,ECL_NIL,ecl_make_fixnum(49989)},
{0,0,0,0,ecl_make_fixnum(349),ecl_make_fixnum(157),(cl_objectfn)L72loop_do_with,NULL,ECL_NIL,ecl_make_fixnum(50160)},
{0,0,0,0,ecl_make_fixnum(351),ecl_make_fixnum(160),(cl_objectfn)L75loop_do_for,NULL,ECL_NIL,ecl_make_fixnum(54010)},
{0,0,0,0,ecl_make_fixnum(353),ecl_make_fixnum(162),(cl_objectfn)L76loop_do_repeat,NULL,ECL_NIL,ecl_make_fixnum(54568)},
{0,0,3,0,ecl_make_fixnum(354),ecl_make_fixnum(166),(cl_objectfn)L78loop_ansi_for_equals,NULL,ECL_NIL,ecl_make_fixnum(55786)},
{0,0,3,0,ecl_make_fixnum(355),ecl_make_fixnum(170),(cl_objectfn)L79loop_for_across,NULL,ECL_NIL,ecl_make_fixnum(56183)},
{0,0,3,0,ecl_make_fixnum(356),ecl_make_fixnum(175),(cl_objectfn)L81loop_for_on,NULL,ECL_NIL,ecl_make_fixnum(58704)},
{0,0,3,0,ecl_make_fixnum(357),ecl_make_fixnum(177),(cl_objectfn)L82loop_for_in,NULL,ECL_NIL,ecl_make_fixnum(60201)},
{0,0,-1,0,ecl_make_fixnum(358),ecl_make_fixnum(181),(cl_objectfn)L83make_loop_path,NULL,ECL_NIL,ecl_make_fixnum(61026)},
{0,0,3,0,ecl_make_fixnum(368),ecl_make_fixnum(199),(cl_objectfn)L86loop_for_being,NULL,ECL_NIL,ecl_make_fixnum(61945)},
{0,0,4,0,ecl_make_fixnum(373),ecl_make_fixnum(230),(cl_objectfn)L92loop_for_arithmetic,NULL,ECL_NIL,ecl_make_fixnum(73912)},
{0,0,-4,0,ecl_make_fixnum(374),ecl_make_fixnum(246),(cl_objectfn)L93loop_hash_table_iteration_path,NULL,ECL_NIL,ecl_make_fixnum(74568)},
{0,0,-4,0,ecl_make_fixnum(376),ecl_make_fixnum(251),(cl_objectfn)L94loop_package_symbols_iteration_path,NULL,ECL_NIL,ecl_make_fixnum(77704)},
{0,0,2,0,ecl_make_fixnum(378),ecl_make_fixnum(269),(cl_objectfn)LC97loop,NULL,ECL_NIL,ecl_make_fixnum(84324)},
};
