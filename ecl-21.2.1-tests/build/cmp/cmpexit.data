static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)1761, (cl_index)1761,
        (ecl_base_char*)
"\"ecl_stack_frame_close(\" \");\" \"ECL_STACK_SET_INDEX(cl_env_copy,\" \"ecl_bds_unwind"
 "(cl_env_copy,\" \"ecl_bds_unwind1(cl_env_copy);\" \"ecl_bds_unwind_n(cl_env_copy,\" c"
 "::ihs \"ecl_ihs_pop(cl_env_copy);\" c::ihs-env \"ihs.lex_env = _ecl_debug_env;\" c::"
 "unwind-bds c::*destination* c::jump-true c::jump-false c::*unwind-exit* c::stack"
 " c::lcl c::*exit* c::*temp* c::bds-bind \"return cl_env_copy->values[0];\" \"return"
 " value0;\" (c::return-fixnum c::return-character c::return-object c::return-doubl"
 "e-float c::return-single-float c::return-long-float c::return-csfloat c::return-"
 "csfloat c::return-csfloat) c::coerce-loc (c::return-fixnum :fixnum c::return-cha"
 "racter :char c::return-single-float :float c::return-double-float :double c::ret"
 "urn-csfloat :csfloat c::return-cdfloat :cdfloat c::return-clfloat :clfloat c::re"
 "turn-object :object) \"cl_fixnum \" \"= \" \";\" \"return(\" c::frame \"ecl_frs_pop(cl_en"
 "v_copy);\" c::tail-recursion-mark c::jump c::unwind-exit \"The value of *EXIT*~%~A"
 "~%is not found in *UNWIND-EXIT*~%~A\" c::baboon-improper-*exit* \"The value of unw"
 "ind exit~%~A~%found in *UNWIND-EXIT*~%~A~%is not valid.\" c::baboon-unwind-exit c"
 "::unwind-no-exit-until \"Unwind-exit label ~A not found\" c::unwind-no-exit \"tail-"
 "recursion-possible: unexpected situation.\" \"tail-recursion-possible: should neve"
 "r return.\" c::tail-recursion-possible c::*tail-recursion-info* c::trash \"goto TT"
 "L;\" \"Tail-recursive call of ~s was replaced by iteration.\" c::c2try-tail-recursi"
 "ve-call 0 c::wt-nl 0 c::set-jump-true c::set-jump-false c::set-loc c::loc-refers"
 "-to-special c::make-temp-var c::wt-go c::make-lcl-var c::wt-nl-open-brace c::wt-"
 "nl-close-brace c::tmp-destination 0 c::baboon 0 0 0 0 0 c::last-call-p c::fun-na"
 "me c::inline-possible c::next-label c::c2psetq c::wt-label c::cmpdebug \"COMPILER"
 "\"" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
