static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)1238, (cl_index)1238,
        (ecl_base_char*)
"c::+ecl-local-stack-frame-variable+ c::+ecl-local-stack-variable+ (c::innermost-"
 "stack-frame) c::with-stack :args c::c1with-stack c::*destination* c::*temp* \"str"
 "uct ecl_stack_frame _ecl_inner_frame_aux;\" c::*volatile* \"cl_object _ecl_inner_f"
 "rame = ecl_stack_frame_open(cl_env_copy,(cl_object)&_ecl_inner_frame_aux,0);\" c:"
 ":*unwind-exit* (c::stack \"_ecl_inner_frame\") \"ecl_stack_frame_close(_ecl_inner_f"
 "rame);\" c::c2with-stack (ffi::c-inline nil nil :object \"_ecl_inner_frame\" :one-l"
 "iner t :side-effects nil) c::c1innermost-stack-frame ((t t) :void \"ecl_stack_fra"
 "me_push(#0,#1)\" :one-liner t :side-effects t) c::c1stack-push c::stack-push-valu"
 "es (values) ((t) :void \"ecl_stack_frame_push_values(#0)\" :one-liner t :side-effe"
 "cts t) c::c1stack-push-values c::c2stack-push-values ((t) (values &rest t) \"cl_e"
 "nv_copy->values[0]=ecl_stack_frame_pop_values(#0);\" :one-liner nil :side-effects"
 " t) c::c1stack-pop ((t t) (values &rest t) \"cl_env_copy->values[0]=ecl_apply_fro"
 "m_stack_frame(#0,#1);\" :one-liner nil :side-effects t) c::c1apply-from-stack-fra"
 "me 0 c::c1expr c::c1form-type c::make-c1form* 0 c::tmp-destination c::wt-nl-open"
 "-brace c::wt-nl c::c2expr* c::wt-nl-close-brace c::unwind-exit 0 0 0 0 c::c2expr"
 " 0 0 \"COMPILER\" \"__frame\" \"__frame_sp\"" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
