static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)1184, (cl_index)1184,
        (ecl_base_char*)
"c::*cmp-env-root* c::cmp-env-root c::*cmp-env* c::cmp-env-copy \"~&;;; Error: Not"
 " a valid lambda expression: ~s.\" c::set-closure-env c::cmp-env-variables c::cmp-"
 "env-functions :cleanup \"Inconsistency in environment.\" c::cmp-env-cleanups 0 c::"
 "global 0 c::cmp-env-register-var :warn :kind c::cmp-env-declare-special c::cmp-e"
 "nv-add-declaration c::cmp-env-extend-declaration c::cmp-env-register-function c:"
 ":cmp-env-register-global-macro c::cmp-env-register-macro c::cmp-env-register-fty"
 "pe c::cmp-env-register-symbol-macro c::cmp-env-register-symbol-macro-function c:"
 ":cmp-env-register-block c::cmp-env-register-tag c::cmp-env-register-cleanup \"Ukn"
 "own record found in environment~%~S\" c::cmp-env-search-function c::cmp-env-searc"
 "h-variables c::cmp-env-search-block c::cmp-env-search-tag c::cmp-env-search-symb"
 "ol-macro c::cmp-env-search-var c::cmp-env-search-macro c::cmp-env-search-ftype c"
 "::cmp-env-mark c::cmp-env-new-variables c::cmp-env-search-declaration 0 c::add-d"
 "efault-optimizations 0 0 0 si::dm-too-many-arguments 0 0 0 c::var-name c::var-ki"
 "nd 0 c::c1make-global-variable 0 0 0 c::fun-name 0 0 0 0 0 0 c::blk-name 0 0 0 c"
 "::baboon 0 0 0 0 0 0 0 c::same-fname-p 0 0 c::var-p 0 \"COMPILER\"" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
