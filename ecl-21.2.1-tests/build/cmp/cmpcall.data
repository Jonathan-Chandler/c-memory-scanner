static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)2055, (cl_index)2055,
        (ecl_base_char*)
"c::with-stack c::stack-push c::unoptimized-long-call :sp-change :side-effects :a"
 "rgs c::unoptimized-funcall c::macroexpand-lambda-block 0 0 \"Malformed function n"
 "ame: ~A\" c::c1funcall c::*inline-blocks* c::*temp* c::c2funcall c::*global-funs*"
 " c::*destination* c::c2call-global c::lfun \"Can not call the function ~A using i"
 "ts exported C name ~A because its function type has not been proclaimed\" c::call"
 "-global-loc c::call-normal c::call-loc c::*compiler-declared-globals* \"extern cl"
 "_object \" \"(\" \",\" \"cl_object\" \");\" \"(cl_narg\" \",cl_object\" \",...);\" :global :cfu"
 "n :lambda :minarg :maxarg c::call-exported-function-loc \"CL\" c::call-indirect c:"
 ":call-unknown-global-loc c::var c::maybe-save-value c::*text-for-lexical-level* "
 "\"cl_env_copy->stack_top-\" c::wt-stack-pointer c::*aux-closure* \"(aux_closure.env"
 "=\" \",cl_env_copy->function=(cl_object)&aux_closure,\" \")\" \"\" \", \" c::wt-call \"(cl"
 "_env_copy->function=\" \")->cfun.entry(\" \"ecl_function_dispatch(cl_env_copy,\" \")(\""
 " c::wt-call-indirect \"Function without a C name: ~A\" c::closure c::*max-env* c::"
 "lexical \"Wrong number of arguments for function ~S\" c::anonymous c::wt-call-norm"
 "al 0 0 c::c1expr c::c1args* c::make-c1form* 0 0 c::check-args-number c::optimize"
 "-funcall/apply-lambda c::cmp-macro-function c::cmp-expand-macro c::c1call c::cmp"
 "err 0 c::c1form-primary-type c::policy-assume-right-type c::inline-args c::unwin"
 "d-exit c::close-inline-blocks 0 si::make-seq-iterator si::seq-iterator-ref c::fu"
 "n-name c::same-fname-p si::seq-iterator-next c::c2try-tail-recursive-call c::loc"
 "-type 0 c::fun-global c::inline-possible c::type-and c::apply-inliner c::policy-"
 "use-direct-c-call c::fun-p c::get-proclaimed-narg 0 c::coerce-locs 0 c::wt-nl-h "
 "c::wt-h1 c::make-fun 0 c::add-symbol 0 c::c1form-name c::c1form-args c::var-chan"
 "ged-in-form-list c::make-temp-var c::c2expr* 0 c::wt 0 c::wt-comment 0 0 c::fun-"
 "cfun c::baboon c::fun-minarg c::fun-maxarg c::fun-closure c::environment-accesso"
 "r c::fun-level c::lex-env-var-name c::fun-needs-narg \"COMPILER\" (\"lex0\" \"lex1\" \""
 "lex2\" \"lex3\" \"lex4\" \"lex5\" \"lex6\" \"lex7\" \"lex8\" \"lex9\")" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
