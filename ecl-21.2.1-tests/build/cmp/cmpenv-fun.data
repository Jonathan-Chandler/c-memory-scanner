static const struct ecl_base_string compiler_data_text1[] = {
        (int8_t)t_base_string, 0, ecl_aet_bc, 0,
        ECL_NIL, (cl_index)1140, (cl_index)1140,
        (ecl_base_char*)
"0 0 0 c::function-arg-types \"The function proclamation ~s ~s is not valid.\" (&op"
 "tional) c::proclaimed-arg-types 0 (values &rest t) 0 c::proclaimed-return-type c"
 "::proclaim-function c::*cmp-env* \"Found function declaration for local macro ~A\""
 " \"In (DECLARE (FTYPE ...)): ~s is not a valid function name\" c::add-function-dec"
 "laration c::get-arg-types c::get-return-type c::get-local-arg-types c::get-local"
 "-return-type 0 0 0 0 c::get-proclaimed-narg \"Not a valid argument to INLINE decl"
 "aration~%~4I~A\" c::declare-inline c::declare-notinline \"Not a valid function nam"
 "e ~s in INLINE proclamation\" c::proclaim-inline \"Not a valid function name ~s in"
 " NOTINLINE proclamation\" c::proclaim-notinline c::declared-inline-p c::declared-"
 "notinline-p c::inline-possible (:compile-toplevel) c::*cmp-env-root* (:load-topl"
 "evel :execute) 'inline (:compile-toplevel :load-toplevel :execute) c::maybe-inst"
 "all-inline-function 0 0 0 c::cmp-env-search-function c::cmp-env-register-ftype 0"
 " c::cmp-env-search-ftype c::fun-p c::fun-global 0 0 c::fun-name 0 0 0 c::cmperr "
 "c::cmp-env-extend-declaration 0 0 0 0 c::cmp-env-search-declaration c::same-fnam"
 "e-p 0 0 0 \"COMPILER\"" };

static const cl_object compiler_data_text[] = {
(cl_object)compiler_data_text1,
NULL};
