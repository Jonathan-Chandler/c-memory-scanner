;;;; chicken.port.import.scm - GENERATED BY CHICKEN 5.3.0rc4 -*- Scheme -*-

(##sys#with-environment
  (lambda ()
    (##sys#register-compiled-module
      'chicken.port
      'port
      (scheme#list)
      '((call-with-input-string . chicken.port#call-with-input-string)
        (call-with-output-string . chicken.port#call-with-output-string)
        (copy-port . chicken.port#copy-port)
        (make-input-port . chicken.port#make-input-port)
        (make-output-port . chicken.port#make-output-port)
        (port-fold . chicken.port#port-fold)
        (port-for-each . chicken.port#port-for-each)
        (port-map . chicken.port#port-map)
        (port-name . chicken.port#port-name)
        (port-position . chicken.port#port-position)
        (make-bidirectional-port . chicken.port#make-bidirectional-port)
        (make-broadcast-port . chicken.port#make-broadcast-port)
        (make-concatenated-port . chicken.port#make-concatenated-port)
        (set-buffering-mode! . chicken.port#set-buffering-mode!)
        (set-port-name! . chicken.port#set-port-name!)
        (terminal-name . chicken.port#terminal-name)
        (terminal-port? . chicken.port#terminal-port?)
        (terminal-size . chicken.port#terminal-size)
        (with-error-output-to-port . chicken.port#with-error-output-to-port)
        (with-input-from-port . chicken.port#with-input-from-port)
        (with-input-from-string . chicken.port#with-input-from-string)
        (with-output-to-port . chicken.port#with-output-to-port)
        (with-output-to-string . chicken.port#with-output-to-string)
        (with-error-output-to-string
          .
          chicken.port#with-error-output-to-string))
      (scheme#list)
      (scheme#list))))

;; END OF FILE
