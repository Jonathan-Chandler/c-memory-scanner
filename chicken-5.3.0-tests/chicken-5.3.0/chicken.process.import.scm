;;;; chicken.process.import.scm - GENERATED BY CHICKEN 5.3.0rc4 -*- Scheme -*-

(##sys#with-environment
  (lambda ()
    (##sys#register-compiled-module
      'chicken.process
      'posix
      (scheme#list)
      '((qs . chicken.process#qs)
        (system . chicken.process#system)
        (system* . chicken.process#system*)
        (process-execute . chicken.process#process-execute)
        (process-fork . chicken.process#process-fork)
        (process-run . chicken.process#process-run)
        (process-signal . chicken.process#process-signal)
        (process-spawn . chicken.process#process-spawn)
        (process-wait . chicken.process#process-wait)
        (call-with-input-pipe . chicken.process#call-with-input-pipe)
        (call-with-output-pipe . chicken.process#call-with-output-pipe)
        (close-input-pipe . chicken.process#close-input-pipe)
        (close-output-pipe . chicken.process#close-output-pipe)
        (create-pipe . chicken.process#create-pipe)
        (open-input-pipe . chicken.process#open-input-pipe)
        (open-output-pipe . chicken.process#open-output-pipe)
        (with-input-from-pipe . chicken.process#with-input-from-pipe)
        (with-output-to-pipe . chicken.process#with-output-to-pipe)
        (process . chicken.process#process)
        (process* . chicken.process#process*)
        (process-sleep . chicken.process#process-sleep)
        (pipe/buf . chicken.process#pipe/buf)
        (spawn/overlay . chicken.process#spawn/overlay)
        (spawn/wait . chicken.process#spawn/wait)
        (spawn/nowait . chicken.process#spawn/nowait)
        (spawn/nowaito . chicken.process#spawn/nowaito)
        (spawn/detach . chicken.process#spawn/detach))
      (scheme#list)
      (scheme#list))))

;; END OF FILE
